<% content_for :title do %>
  <%= @room.name %>
<% end %>
<% content_for :left_column do %>
<br>
<br>
<legend>Instructor</legend>
<div class="videobox" id="vb">
  
</div>
<br>
<legend>Students</legend>
<div id="box" class="videobox">
  

</div>
<% end %>
<% content_for :right_column do %>
<br>
<br>
<br>
  <div id="special">
    <legend>Create a Virtual WhiteBoard</legend>
    <form action="/rooms" method="post">
      <input type='hidden' name='authenticity_token' value='<%= form_authenticity_token =%>'>
      <div class="form-group">
        <label for="room[title]">Title</label>
        <input type="text" class="form-control" name="room[title]" id="room[title]" placeholder="">
      </div>
      <input type="hidden" name="special" value="<%= @room.id %>>">
      <button type="submit" class="btn btn-primary">Create a VWB</button>
    </form>
  </div>
  <% end %>
<script src="http://static.opentok.com/v2/js/opentok.min.js" type="text/javascript"></script>
    <script type="text/javascript">
    var apiKey = 46026622;
    var sessionId = "<%= @room.sessionId %>";
	  var token = "<%= @tok_token %>";
	  var session;

	//Video chat event listeners
	//session.addEventListener('sessionConnected', sessionConnectedHandler);
	//session.addEventListener('streamCreated', streamCreatedHandler);
  //session.addEventListener('streamDestroyed', streamDestroyedHandler);
  //TB.setLogLevel(TB.DEBUG);
  
  //session.connect(apiKey, token);
  var session = TB.initSession(sessionId);
  session.on('sessionConnected', sessionConnectedHandler);
  session.on('streamCreated', streamCreatedHandler);
  session.connect(apiKey, token);

  var publisher;
  function sessionConnectedHandler(event) {
    publisher = TB.initPublisher("vb");
    session.publish(publisher);
    // Subscribe to streams that were in the session when we connected
    subscribeToStreams(event.streams);
  }
  function streamCreatedHandler(event) {
    // Subscribe to any new streams that are created
    subscribeToStreams(event.streams);
  }
  function subscribeToStreams(streams) {
    for (var i = 0; i < streams.length; i++) {
      // Make sure we don't subscribe to ourself
      if (streams[i].connection.connectionId == session.connection.connectionId) {
        return ;
      }
      // Create the div to put the subscriber element in to
      var div = document.createElement('div');
      div.setAttribute('id', 'stream' + streams[i].streamId);
      document.getElementById("box").appendChild(div);
      // Subscribe to the stream
      session.subscribe(streams[i], div.id);
    }
  }
</script>


